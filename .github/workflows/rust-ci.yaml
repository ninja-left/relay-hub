name: Rust CI

permissions:
  contents: write

on:
  pull_request:
    branches: ["main"]

jobs:
  code-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Run cargo fmt
        working-directory: core
        run: cargo fmt --all

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -u
          if ! git diff --cached --quiet; then
            git commit -m "chore: auto-format code"
            git push
          fi

  build:
    name: Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            core/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('core/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Format check
        working-directory: core
        run: cargo fmt --all -- --check

      - name: Clippy
        working-directory: core
        run: cargo clippy --all-targets -- -D warnings

      - name: Build
        working-directory: core
        run: cargo build --all --verbose

      - name: Test
        working-directory: core
        run: cargo test --all --verbose
